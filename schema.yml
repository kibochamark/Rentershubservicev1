openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/accounts/create/otp:
    post:
      operationId: api_v1_accounts_create_otp_create
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '201':
          description: No response body
  /api/v1/accounts/create/role/:
    post:
      operationId: api_v1_accounts_create_role_create
      description: Create an instance of a user
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSerializerModel'
          description: ''
  /api/v1/accounts/create/user/:
    post:
      operationId: api_v1_accounts_create_user_create
      description: Create an instance of a user
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/accounts/login/user/:
    post:
      operationId: api_v1_accounts_login_user_create
      description: login user and generate token
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounts/role/{id}/:
    get:
      operationId: api_v1_accounts_role_retrieve
      description: retrieve an instance of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSerializerModel'
          description: ''
  /api/v1/accounts/role/{id}/delete:
    delete:
      operationId: api_v1_accounts_role_delete_destroy
      description: Delete an instance of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/roles:
    get:
      operationId: api_v1_accounts_roles_list
      description: Get all users
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleSerializerModel'
          description: ''
  /api/v1/accounts/update/role/{id}:
    patch:
      operationId: api_v1_accounts_update_role_partial_update
      description: partially update an instance of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleSerializerModel'
          description: ''
  /api/v1/accounts/update/user/{id}:
    patch:
      operationId: api_v1_accounts_update_user_partial_update
      description: partially update an instance of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/v1/accounts/user/{id}/:
    get:
      operationId: api_v1_accounts_user_retrieve
      description: retrieve an instance of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/v1/accounts/user/{id}/delete:
    delete:
      operationId: api_v1_accounts_user_delete_destroy
      description: Delete an instance of a user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/users:
    get:
      operationId: api_v1_accounts_users_list
      description: Get all users
      tags:
      - api
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        first_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        contact:
          type: string
          pattern: ^\d{10}
          maxLength: 10
        role_name:
          allOf:
          - $ref: '#/components/schemas/Role'
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        status:
          type: string
          readOnly: true
        terms_and_conditions:
          type: string
          readOnly: true
      required:
      - contact
      - email
      - pk
      - role_name
      - status
      - terms_and_conditions
      - username
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Register:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          type: integer
          nullable: true
        contact:
          type: string
          pattern: ^\d{10}
          maxLength: 10
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        otp:
          type: string
          nullable: true
          maxLength: 6
        otp_expiry:
          type: string
          format: date-time
          nullable: true
        max_otp_try:
          type: string
          maxLength: 2
      required:
      - contact
      - email
      - password
      - username
    Role:
      type: object
      properties:
        role:
          type: string
          readOnly: true
      required:
      - role
    RoleEnum:
      enum:
      - ADMIN
      - LANDLORD
      - GROUNDAGENT
      type: string
      description: |-
        * `ADMIN` - Admin
        * `LANDLORD` - Landlord
        * `GROUNDAGENT` - GroundAgent
    RoleSerializerModel:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - pk
      - role
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
